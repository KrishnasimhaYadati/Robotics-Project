import rclpy
from rclpy.node import Node
from geometry_msgs.msg import Twist
import sys, tty, termios

class TeleopNode(Node):
    def _init_(self):
        super()._init_('teleop_node')
        self.pub = self.create_publisher(Twist, 'cmd_vel', 10)
        self.get_logger().info("Teleop: WASD or IJKL to move, q to quit")
        self.run()

    def get_key(self):
        fd = sys.stdin.fileno()
        old = termios.tcgetattr(fd)
        try:
            tty.setraw(fd)
            return sys.stdin.read(1).lower()
        finally:
            termios.tcsetattr(fd, termios.TCSADRAIN, old)

    def run(self):
        msg = Twist()
        speed = 0.2
        turn = 0.5
        while rclpy.ok():
            key = self.get_key()
            if key in ('w','i'):
                msg.linear.x = speed; msg.angular.z = 0.0
            elif key in ('s',','):
                msg.linear.x = -speed; msg.angular.z = 0.0
            elif key in ('a','j'):
                msg.linear.x = 0.0; msg.angular.z = turn
            elif key in ('d','l'):
                msg.linear.x = 0.0; msg.angular.z = -turn
            elif key in ('k',' '):
                msg.linear.x = 0.0; msg.angular.z = 0.0
            elif key == 'q':
                break
            else:
                continue

            self.pub.publish(msg)
            self.get_logger().info(f"cmd_vel â†’ lin: {msg.linear.x:.2f}, ang: {msg.angular.z:.2f}")

def main(args=None):
    rclpy.init(args=args)
    node = TeleopNode()
    node.destroy_node()
    rclpy.shutdown()
